using UnityEngine;
using System.Collections;

public class EnemyAI : MonoBehaviour
{
    public float detectionRadius = 5f;
    public float attackRange = 1.5f; // Melee range
    public float rangedStopDistance = 4f; // Distance for ranged AI to stop moving closer
    public float speed = 2f;
    public float attackCooldown = 1.5f;
    public bool isRanged = false; // Toggle between melee and ranged

    private Transform player;
    private Vector2 randomDirection;
    private bool isAttacking = false;
    private bool isIdleMoving = false;
    private Rigidbody2D rb;

    void Start()
    {
        player = GameObject.FindGameObjectWithTag("Player").transform;
        rb = GetComponent<Rigidbody2D>();
        StartCoroutine(RandomMovement()); // Start idle movement loop
    }

    void Update()
    {
        float distanceToPlayer = Vector2.Distance(transform.position, player.position);

        if (distanceToPlayer <= detectionRadius)
        {
            if (!isAttacking)
            {
                if (isRanged)
                    HandleRangedAI(distanceToPlayer);
                else
                    HandleMeleeAI(distanceToPlayer);
            }
        }
        else
        {
            if (!isIdleMoving)
                StartCoroutine(RandomMovement()); // Resume random movement if no target
        }
    }

    void HandleMeleeAI(float distance)
    {
        if (distance > attackRange)
        {
            MoveTowards(player.position);
        }
        else if (!isAttacking)
        {
            StartCoroutine(Attack());
        }

        // Move back after attack
        if (distance < attackRange * 0.5f)
        {
            MoveAwayFrom(player.position);
        }
    }

    void HandleRangedAI(float distance)
    {
        if (distance > rangedStopDistance)
        {
            MoveTowards(player.position); // Move towards player
        }
        else if (distance < rangedStopDistance - 1f)
        {
            MoveAwayFrom(player.position); // Keep distance
        }
        else if (!isAttacking)
        {
            StartCoroutine(Attack());
        }
    }

    IEnumerator Attack()
    {
        isAttacking = true;
        Debug.Log("Enemy attacks!");
        
        // Attack logic here (e.g., spawn projectile or melee hitbox)
        
        yield return new WaitForSeconds(attackCooldown);
        isAttacking = false;
    }

    void MoveTowards(Vector2 target)
    {
        Vector2 direction = (target - (Vector2)transform.position).normalized;
        rb.velocity = direction * speed;
    }

    void MoveAwayFrom(Vector2 target)
    {
        Vector2 direction = ((Vector2)transform.position - target).normalized;
        rb.velocity = direction * speed;
    }

    IEnumerator RandomMovement()
    {
        isIdleMoving = true;
        while (true)
        {
            if (Vector2.Distance(transform.position, player.position) > detectionRadius)
            {
                randomDirection = new Vector2(Random.Range(-1f, 1f), Random.Range(-1f, 1f)).normalized;
                rb.velocity = randomDirection * (speed * 0.5f);
                yield return new WaitForSeconds(Random.Range(1f, 3f));
            }
            else
            {
                rb.velocity = Vector2.zero;
                yield return new WaitForSeconds(1f);
            }
        }
    }
}
